{"version":3,"file":"index.e3d126fe.js","sources":["../../../../packages/flat-components/src/components/FilePreview/FilePreviewAudio/index.tsx","../../../../packages/flat-components/src/components/FilePreview/FilePreviewImage/index.tsx","../../../../packages/flat-components/src/components/FilePreview/FilePreviewVideo/index.tsx","../../../../packages/flat-pages/src/FilePreviewPage/index.tsx"],"sourcesContent":["import \"./style.less\";\n\nimport { CloudFile } from \"@netless/flat-server-api\";\nimport React, { FC } from \"react\";\n\nexport interface FilePreviewAudioProps {\n    file: CloudFile;\n}\n\nexport const FilePreviewAudio: FC<FilePreviewAudioProps> = ({ file }) => {\n    return (\n        <div className=\"file-preview-audio-container\">\n            <audio controls src={file.fileURL} />\n        </div>\n    );\n};\n","import \"./style.less\";\nimport { CloudFile } from \"@netless/flat-server-api\";\nimport React, { FC } from \"react\";\n\nexport interface FilePreviewImageProps {\n    file: CloudFile;\n}\n\nexport const FilePreviewImage: FC<FilePreviewImageProps> = ({ file }) => {\n    return (\n        <div className=\"file-preview-image-container\">\n            <img alt={file.fileName} src={file.fileURL} />\n        </div>\n    );\n};\n","import \"./style.less\";\n\nimport { CloudFile } from \"@netless/flat-server-api\";\nimport React, { FC } from \"react\";\n\nexport interface FilePreviewVideoProps {\n    file: CloudFile;\n}\n\nexport const FilePreviewVideo: FC<FilePreviewVideoProps> = ({ file }) => {\n    return (\n        <div className=\"file-preview-video-container\">\n            <video controls src={file.fileURL} />\n        </div>\n    );\n};\n","import \"./style.less\";\n\nimport React, { useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { useParams } from \"react-router-dom\";\nimport {\n    ErrorPage,\n    useSafePromise,\n    FilePreviewImage,\n    FilePreviewAudio,\n    FilePreviewVideo,\n    FlatPrefersColorScheme,\n    DarkModeContext,\n} from \"flat-components\";\nimport { RouteNameType, RouteParams } from \"../utils/routes\";\nimport { CloudFile } from \"@netless/flat-server-api\";\nimport { useIsomorphicLayoutEffect } from \"react-use\";\nimport { FlatServices, IServiceFileExtensions, IServiceFilePreview } from \"@netless/flat-services\";\nimport { PreferencesStoreContext } from \"../components/StoreProvider\";\nimport { useSearchParams } from \"../UserSettingPage/ApplicationsPage/hooks\";\n\nexport interface FilePreviewPageProps {\n    file?: CloudFile;\n}\n\nexport const FilePreviewPage: React.FC<FilePreviewPageProps> = props => {\n    const sp = useSafePromise();\n    const preferencesStore = useContext(PreferencesStoreContext);\n    const isDark = useContext(DarkModeContext);\n    const params = useParams<RouteParams<RouteNameType.FilePreviewPage>>();\n    const [query] = useSearchParams();\n    const [containerNode, setContainerNode] = React.useState<HTMLDivElement | null>(null);\n    const [service, setService] = React.useState<IServiceFilePreview | null | undefined>();\n\n    const file = React.useMemo(() => {\n        if (props.file) {\n            return props.file;\n        }\n        try {\n            return JSON.parse(decodeURIComponent(params.file)) as CloudFile;\n        } catch {\n            return null;\n        }\n    }, [props.file, params]);\n\n    const fileExt = React.useMemo(\n        () =>\n            (/\\.([^.]+)$/.exec(file?.fileName || \"\") || [\n                \"\",\n                \"\",\n            ])[1].toLowerCase() as IServiceFileExtensions,\n        [file],\n    );\n\n    useIsomorphicLayoutEffect(() => {\n        const raw = query.get(\"theme\");\n        if (!raw) {\n            return;\n        }\n        const theme: FlatPrefersColorScheme =\n            raw === \"dark\" ? \"dark\" : raw === \"light\" ? \"light\" : \"auto\";\n        preferencesStore.updatePrefersColorScheme(theme);\n    }, []);\n\n    useIsomorphicLayoutEffect(() => {\n        let previewService: IServiceFilePreview | null = null;\n        sp(FlatServices.getInstance().requestService(`file-preview:${fileExt}`, false)).then(\n            service => {\n                previewService = service;\n                setService(service);\n            },\n        );\n        return () => {\n            previewService?.destroy?.();\n        };\n    }, []);\n\n    useIsomorphicLayoutEffect(() => {\n        if (file && containerNode && service) {\n            service.preview(file, containerNode);\n        }\n    }, [file, containerNode, service]);\n\n    if (!file) {\n        return <ErrorPage />;\n    }\n\n    return (\n        <div\n            ref={setContainerNode}\n            className={classNames(\"file-preview-container\", {\n                \"telebox-color-scheme-dark\": isDark,\n            })}\n            style={{ height: \"100%\", overflow: \"hidden\" }}\n        >\n            {service === null && renderBuiltinFilePreview(file, fileExt)}\n        </div>\n    );\n};\n\nexport default FilePreviewPage;\n\nfunction renderBuiltinFilePreview(file: CloudFile, fileExt: string): React.ReactNode {\n    switch (fileExt) {\n        case \"jpg\":\n        case \"jpeg\":\n        case \"png\":\n        case \"webp\": {\n            return <FilePreviewImage file={file} />;\n        }\n        case \"mp3\": {\n            return <FilePreviewAudio file={file} />;\n        }\n        case \"mp4\": {\n            return <FilePreviewVideo file={file} />;\n        }\n    }\n    return <ErrorPage />;\n}\n"],"names":["FilePreviewAudio","file","fileURL","FilePreviewImage","fileName","FilePreviewVideo","FilePreviewPage","props","sp","useSafePromise","preferencesStore","useContext","PreferencesStoreContext","isDark","DarkModeContext","params","useParams","query","useSearchParams","containerNode","setContainerNode","React","useState","service","setService","useMemo","JSON","parse","decodeURIComponent","fileExt","exec","toLowerCase","useIsomorphicLayoutEffect","raw","get","theme","updatePrefersColorScheme","previewService","FlatServices","getInstance","requestService","then","destroy","preview","classNames","height","overflow","renderBuiltinFilePreview","_jsx","ErrorPage"],"mappings":"8JASO,MAAMA,EAA8C,CAAC,CAAEC,KAAAA,CAAF,MAEpD,MAAA,CAAK,UAAU,+BAAf,WACI,QAAA,CAAO,SAAP,GAAgB,IAAKA,EAAKC,OAAAA,CAA1B,CAAA,CAFR,ECFSC,EAA8C,CAAC,CAAEF,KAAAA,CAAF,MAEpD,MAAA,CAAK,UAAU,+BAAf,WACI,MAAA,CAAK,IAAKA,EAAKG,SAAU,IAAKH,EAAKC,OAAAA,CAAnC,CAAA,CAFR,ECASG,EAA8C,CAAC,CAAEJ,KAAAA,CAAF,MAEpD,MAAA,CAAK,UAAU,+BAAf,WACI,QAAA,CAAO,SAAP,GAAgB,IAAKA,EAAKC,OAAAA,CAA1B,CAAA,CAFR,ECeG,MAAMI,EAA2DC,GAAA,CACpE,MAAMC,EAAKC,IACLC,EAAmBC,qBAAWC,CAAD,EAC7BC,EAASF,qBAAWG,CAAD,EACnBC,EAASC,IACT,CAACC,CAAD,EAAUC,IACV,CAACC,EAAeC,CAAhB,EAAoCC,EAAMC,SAAgC,IAAtC,EACpC,CAACC,EAASC,CAAV,EAAwBH,EAAMC,SAApC,EAEMrB,EAAOoB,EAAMI,QAAQ,IAAM,CAC7B,GAAIlB,EAAMN,KACN,OAAOM,EAAMN,KAEb,GAAA,CACA,OAAOyB,KAAKC,MAAMC,mBAAmBb,EAAOd,IAAR,CAA7B,CAAA,MACT,CACS,OAAA,IACV,CACF,EAAA,CAACM,EAAMN,KAAMc,CAAb,CATU,EAWPc,EAAUR,EAAMI,QAClB,KACK,aAAaK,MAAK7B,GAAAA,YAAAA,EAAMG,WAAY,EAApC,GAA2C,CACxC,GACA,EAFwC,GAGzC,GAAG2B,cACV,CAAC9B,CAAD,CANY,EAsChB,OA7BA+B,EAA0B,IAAM,CACtBC,MAAAA,EAAMhB,EAAMiB,IAAI,OAAV,EACZ,GAAI,CAACD,EACD,OAEJ,MAAME,EACFF,IAAQ,OAAS,OAASA,IAAQ,QAAU,QAAU,OAC1DvB,EAAiB0B,yBAAyBD,CAA1C,CACH,EAAE,CARsB,CAAA,EAUzBH,EAA0B,IAAM,CAC5B,IAAIK,EAA6C,KAC9CC,OAAAA,EAAAA,EAAaC,cAAcC,eAAgB,gBAAeX,IAAW,EAArE,CAAD,EAA8EY,KAC5ElB,GAAW,CACUA,EAAAA,EACjBC,EAAWD,CAAD,CAAA,CAHlB,EAMO,IAAM,QACTc,EAAAA,GAAAA,YAAAA,EAAgBK,UAAhBL,MAAAA,EAAAA,KAAAA,EAAA,CAEP,EAAE,CAXsB,CAAA,EAazBL,EAA0B,IAAM,CACxB/B,GAAQkB,GAAiBI,GACjBoB,EAAAA,QAAQ1C,EAAMkB,CAAtB,CAEL,EAAA,CAAClB,EAAMkB,EAAeI,CAAtB,CAJsB,EAMpBtB,IAKD,MAAA,CACI,IAAKmB,EACL,UAAWwB,EAAW,yBAA0B,CAC5C,4BAA6B/B,CAAAA,CADZ,EAGrB,MAAO,CAAEgC,OAAQ,OAAQC,SAAU,QAA5B,EALX,SAOKvB,IAAY,MAAQwB,EAAyB9C,EAAM4B,CAAP,CAAA,CARrD,EAHWmB,EAACC,EAAR,CAAA,CAAA,CAcP,EAID,SAASF,EAAyB9C,EAAiB4B,EAAkC,CACjF,OAAQA,EAAR,CACI,IAAK,MACL,IAAK,OACL,IAAK,MACL,IAAK,OACD,SAAQ1B,EAAD,CAAkB,KAAAF,CAAA,CAAzB,EAEJ,IAAK,MACD,SAAQD,EAAD,CAAkB,KAAAC,CAAA,CAAzB,EAEJ,IAAK,MACD,SAAQI,EAAD,CAAkB,KAAAJ,CAAA,CAAzB,CAXR,CAcO,OAAA+C,EAACC,EAAR,CAAA,CAAA,CACH"}