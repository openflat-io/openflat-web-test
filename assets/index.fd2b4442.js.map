{"version":3,"file":"index.fd2b4442.js","sources":["../../../../node_modules/.pnpm/date-fns@2.29.3/node_modules/date-fns/esm/fp/formatWithOptions/index.js","../../../../packages/flat-components/src/components/PeriodicRoomPage/icons/more-menu.svg","../../../../packages/flat-components/src/components/PeriodicRoomPage/CancelSubPeriodicRoomModal.tsx","../../../../packages/flat-components/src/components/PeriodicRoomPage/MoreMenu.tsx","../../../../packages/flat-components/src/components/PeriodicRoomPage/CancelPeriodicRoomModal.tsx","../../../../packages/flat-components/src/components/PeriodicRoomPage/index.tsx","../../../../packages/flat-pages/src/PeriodicRoomDetailPage/index.tsx"],"sourcesContent":["// This file is generated automatically by `scripts/build/fp.ts`. Please, don't change it.\nimport fn from \"../../format/index.js\";\nimport convertToFP from \"../_lib/convertToFP/index.js\";\nexport default convertToFP(fn, 3);","export default \"data:image/svg+xml;charset=utf8,%3csvg width='22' height='22' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M8 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z' fill='%23444E60' fill-rule='evenodd'/%3e%3c/svg%3e\";","import React from \"react\";\nimport { Button, Modal } from \"antd\";\nimport { useTranslate } from \"@netless/flat-i18n\";\n\nexport interface CancelSubPeriodicRoomModalProps {\n    visible: boolean;\n    isCreator: boolean;\n    onCancel: () => void;\n    onCancelSubPeriodicRoom: () => void;\n}\n\nexport const CancelSubPeriodicRoomModal: React.FC<CancelSubPeriodicRoomModalProps> = ({\n    visible,\n    isCreator,\n    onCancel,\n    onCancelSubPeriodicRoom,\n}) => {\n    const t = useTranslate();\n    return (\n        <Modal\n            footer={[\n                <Button key=\"Cancel\" onClick={onCancel}>\n                    {isCreator ? t(\"think-again\") : t(\"cancel\")}\n                </Button>,\n                <Button key=\"Ok\" type=\"primary\" onClick={onCancelSubPeriodicRoom}>\n                    {t(\"confirm\")}\n                </Button>,\n            ]}\n            open={visible}\n            title={t(\"cancel-room\")}\n            onCancel={onCancel}\n        >\n            <span>{t(\"cancel-sub-periodic-room-tips\")}</span>\n        </Modal>\n    );\n};\n","import moreMenuSVG from \"./icons/more-menu.svg\";\n\nimport React, { useState } from \"react\";\nimport { Dropdown, Menu, message } from \"antd\";\nimport { RoomInfo } from \"../../types/room\";\nimport { InviteModal } from \"../InviteModal\";\nimport { CancelSubPeriodicRoomModal } from \"./CancelSubPeriodicRoomModal\";\nimport { useTranslate } from \"@netless/flat-i18n\";\n\nexport interface MoreMenuProps {\n    room: RoomInfo;\n    userName: string;\n    inviteBaseUrl: string;\n    isCreator: boolean;\n    onCopyInvitation: (text: string) => void;\n    onCancelSubPeriodicRoom: () => void;\n    jumpToRoomDetailPage: () => void;\n    jumpToModifyOrdinaryRoomPage: () => void;\n}\n\nexport const MoreMenu: React.FC<MoreMenuProps> = ({\n    room,\n    userName,\n    inviteBaseUrl,\n    isCreator,\n    onCopyInvitation,\n    onCancelSubPeriodicRoom,\n    jumpToRoomDetailPage,\n    jumpToModifyOrdinaryRoomPage,\n}) => {\n    const t = useTranslate();\n    const [cancelSubPeriodicRoomVisible, setCancelSubPeriodicRoomVisible] = useState(false);\n    const [inviteRoomVisible, setInviteRoomVisible] = useState(false);\n\n    return (\n        <>\n            <Dropdown\n                overlay={() => {\n                    return (\n                        <Menu\n                            items={[\n                                {\n                                    key: \"room-detail\",\n                                    label: t(\"room-detail\"),\n                                    onClick: jumpToRoomDetailPage,\n                                },\n                                ...(isCreator\n                                    ? [\n                                          {\n                                              key: \"modify-room\",\n                                              label: t(\"modify-room\"),\n                                              onClick: jumpToModifyOrdinaryRoomPage,\n                                          },\n                                          {\n                                              key: \"cancel-room\",\n                                              label: t(\"cancel-room\"),\n                                              onClick: () => setCancelSubPeriodicRoomVisible(true),\n                                          },\n                                      ]\n                                    : []),\n                                {\n                                    key: \"invitation\",\n                                    label: t(\"invitation\"),\n                                    onClick: () => setInviteRoomVisible(true),\n                                },\n                            ]}\n                        />\n                    );\n                }}\n                trigger={[\"click\"]}\n            >\n                <img alt={t(\"more\")} src={moreMenuSVG} />\n            </Dropdown>\n            <CancelSubPeriodicRoomModal\n                isCreator={isCreator}\n                visible={cancelSubPeriodicRoomVisible}\n                onCancel={() => setCancelSubPeriodicRoomVisible(false)}\n                onCancelSubPeriodicRoom={onCancelSubPeriodicRoom}\n            />\n            <InviteModal\n                baseUrl={inviteBaseUrl}\n                room={room}\n                userName={userName}\n                visible={inviteRoomVisible}\n                onCancel={() => setInviteRoomVisible(false)}\n                onCopy={text => {\n                    onCopyInvitation(text);\n                    void message.success(t(\"copy-success\"));\n                    setInviteRoomVisible(false);\n                }}\n            />\n        </>\n    );\n};\n","import React from \"react\";\nimport { Button, Modal } from \"antd\";\nimport { useTranslate } from \"@netless/flat-i18n\";\n\nexport interface CancelPeriodicRoomModalProps {\n    visible: boolean;\n    isCreator: boolean;\n    onCancel: () => void;\n    onCancelPeriodicRoom: () => void;\n}\n\nexport const CancelPeriodicRoomModal: React.FC<CancelPeriodicRoomModalProps> = ({\n    visible,\n    isCreator,\n    onCancel,\n    onCancelPeriodicRoom,\n}) => {\n    const t = useTranslate();\n    const title = (() => {\n        if (!isCreator) {\n            return t(\"remove-room\");\n        }\n\n        return t(\"cancel-of-periodic-rooms\");\n    })();\n\n    const content = (): React.ReactElement => {\n        if (!isCreator) {\n            return <span>{t(\"remove-series-of-periodic-room-tips\")}</span>;\n        }\n\n        return <span>{t(\"cancel-periodic-room-tips\")}</span>;\n    };\n\n    return (\n        <Modal\n            footer={[\n                <Button key=\"Cancel\" onClick={onCancel}>\n                    {isCreator ? t(\"think-again\") : t(\"cancel\")}\n                </Button>,\n                <Button key=\"Ok\" type=\"primary\" onClick={onCancelPeriodicRoom}>\n                    {t(\"confirm\")}\n                </Button>,\n            ]}\n            open={visible}\n            title={title}\n            onCancel={onCancel}\n        >\n            {content()}\n        </Modal>\n    );\n};\n","import \"./index.less\";\n\nimport React, { useMemo, useState } from \"react\";\nimport { Button, Table } from \"antd\";\nimport { getDay } from \"date-fns\";\nimport { format, formatWithOptions } from \"date-fns/fp\";\nimport { zhCN, enUS } from \"date-fns/locale\";\nimport { RoomInfo, RoomStatus, RoomType, Week } from \"../../types/room\";\nimport { getWeekName, getWeekNames } from \"../../utils/room\";\nimport { RoomStatusElement } from \"../RoomStatusElement\";\nimport { MoreMenu } from \"./MoreMenu\";\nimport { CancelPeriodicRoomModal } from \"./CancelPeriodicRoomModal\";\nimport { useLanguage, useTranslate } from \"@netless/flat-i18n\";\n\nexport interface PeriodicRoomPanelProps {\n    rooms: Array<RoomInfo | undefined>;\n    userName: string;\n    isCreator: boolean;\n    inviteBaseUrl: string;\n    periodicInfo: {\n        weeks: Week[];\n        roomType: RoomType;\n        endTime: number;\n    };\n    onCopyInvitation: (text: string) => void;\n    onCancelPeriodicRoom: () => void;\n    onCancelSubPeriodicRoom: (roomUUID: string, periodicUUID: string) => void;\n    jumpToRoomDetailPage: (roomUUID: string, periodicUUID: string) => void;\n    jumpToModifyOrdinaryRoomPage: (roomUUID: string, periodicUUID: string) => void;\n    jumpToModifyPeriodicRoomPage: () => void;\n}\n\nexport const PeriodicRoomPanel: React.FC<PeriodicRoomPanelProps> = ({\n    rooms,\n    userName,\n    inviteBaseUrl,\n    isCreator,\n    periodicInfo,\n    onCopyInvitation,\n    onCancelPeriodicRoom,\n    onCancelSubPeriodicRoom,\n    jumpToRoomDetailPage,\n    jumpToModifyPeriodicRoomPage,\n    jumpToModifyOrdinaryRoomPage,\n}) => {\n    const t = useTranslate();\n    const language = useLanguage();\n    const [cancelPeriodicRoomModalVisible, setCancelPeriodicRoomModalVisible] = useState(false);\n\n    const locale = useMemo(() => (language.startsWith(\"zh\") ? zhCN : enUS), [language]);\n    const yearMonthFormat = formatWithOptions({ locale }, \"yyyy/MM\");\n    const dayFormat = formatWithOptions({ locale }, \"dd\");\n    const timeSuffixFormat = format(\"HH:mm\");\n    const dayWeekFormat = formatWithOptions({ locale }, \"yyyy/MM/dd iii\");\n\n    const hasRunning = rooms.some(room =>\n        [RoomStatus.Started, RoomStatus.Paused].includes(room?.roomStatus as RoomStatus),\n    );\n\n    const defaultDate = new Date();\n\n    const renderPeriodicRoomTable = (): React.ReactNode => {\n        const polymerizationRooms = (() => {\n            const result: Record<string, RoomInfo[]> = {};\n\n            rooms.forEach(room => {\n                if (room?.beginTime) {\n                    const key = result[yearMonthFormat(room.beginTime)];\n\n                    if (key) {\n                        key.push(room);\n                    } else {\n                        result[yearMonthFormat(room.beginTime)] = [room];\n                    }\n                }\n            });\n\n            return result;\n        })();\n\n        const groupedList = Object.keys(polymerizationRooms)\n            .sort()\n            .map(key => (\n                <div key={key}>\n                    <div className=\"periodic-room-panel-month-value\">{key}</div>\n                    <div className=\"periodic-room-panel-table-line\" />\n                    <Table\n                        bordered={false}\n                        dataSource={polymerizationRooms[key]}\n                        pagination={false}\n                        rowKey=\"roomUUID\"\n                        showHeader={false}\n                    >\n                        <Table.Column\n                            align=\"left\"\n                            render={(_, room: RoomInfo) =>\n                                // TODO: i18n\n                                dayFormat(room.beginTime || defaultDate) + \"日\"\n                            }\n                        />\n                        <Table.Column\n                            align=\"center\"\n                            render={(_, room: RoomInfo) =>\n                                getWeekName(getDay(room.beginTime || defaultDate), language)\n                            }\n                        />\n                        <Table.Column\n                            align=\"center\"\n                            render={(_, room: RoomInfo) => {\n                                return (\n                                    timeSuffixFormat(room.beginTime || defaultDate) +\n                                    \"~\" +\n                                    timeSuffixFormat(room.endTime || defaultDate)\n                                );\n                            }}\n                        />\n                        <Table.Column\n                            align=\"center\"\n                            render={(_, room: RoomInfo) => {\n                                return <RoomStatusElement room={room} />;\n                            }}\n                        />\n                        <Table.Column\n                            align=\"right\"\n                            render={(_, room: RoomInfo) => {\n                                return (\n                                    <MoreMenu\n                                        inviteBaseUrl={inviteBaseUrl}\n                                        isCreator={isCreator}\n                                        jumpToModifyOrdinaryRoomPage={() =>\n                                            jumpToModifyOrdinaryRoomPage(\n                                                room.roomUUID,\n                                                room.periodicUUID!,\n                                            )\n                                        }\n                                        jumpToRoomDetailPage={() =>\n                                            jumpToRoomDetailPage(room.roomUUID, room.periodicUUID!)\n                                        }\n                                        room={room}\n                                        userName={userName}\n                                        onCancelSubPeriodicRoom={() =>\n                                            onCancelSubPeriodicRoom(\n                                                room.roomUUID,\n                                                room.periodicUUID!,\n                                            )\n                                        }\n                                        onCopyInvitation={onCopyInvitation}\n                                    />\n                                );\n                            }}\n                        />\n                    </Table>\n                </div>\n            ));\n        return <div className=\"periodic-room-panel-table-container\">{groupedList}</div>;\n    };\n\n    return (\n        <>\n            <div className=\"periodic-room-panel-container\">\n                <div className=\"periodic-room-panel-tips\">\n                    <div className=\"periodic-room-panel-tips-title\">\n                        {t(\"repeat-frequency\", {\n                            week: getWeekNames(periodicInfo.weeks, language),\n                        })}\n                    </div>\n                    <div className=\"periodic-room-panel-tips-type\">\n                        {t(\"schedule-room-type\", {\n                            type: t(`class-room-type.${periodicInfo.roomType}`),\n                        })}\n                    </div>\n                    <div className=\"periodic-room-panel-tips-inner\">\n                        {t(\"schedule-room-detail\", {\n                            time: dayWeekFormat(periodicInfo.endTime),\n                            length: rooms.length,\n                        })}\n                    </div>\n                </div>\n                <div className=\"periodic-room-panel-btn-list\">\n                    {isCreator ? (\n                        <>\n                            <Button disabled={hasRunning} onClick={jumpToModifyPeriodicRoomPage}>\n                                {t(\"modify-periodic-rooms\")}\n                            </Button>\n                            <Button\n                                danger\n                                disabled={hasRunning}\n                                onClick={() => setCancelPeriodicRoomModalVisible(true)}\n                            >\n                                {t(\"cancel-of-periodic-rooms\")}\n                            </Button>\n                        </>\n                    ) : (\n                        <Button danger onClick={() => setCancelPeriodicRoomModalVisible(true)}>\n                            {t(\"remove-periodic-room\")}\n                        </Button>\n                    )}\n                </div>\n                {renderPeriodicRoomTable()}\n            </div>\n            <CancelPeriodicRoomModal\n                isCreator={isCreator}\n                visible={cancelPeriodicRoomModalVisible}\n                onCancel={() => setCancelPeriodicRoomModalVisible(false)}\n                onCancelPeriodicRoom={onCancelPeriodicRoom}\n            />\n        </>\n    );\n};\n","import \"./style.less\";\n\nimport { message } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLastLocation } from \"react-router-last-location\";\nimport { LoadingPage, PeriodicRoomPanel, errorTips } from \"flat-components\";\nimport { useTranslate } from \"@netless/flat-i18n\";\nimport { PageStoreContext, RoomStoreContext } from \"../components/StoreProvider\";\nimport { globalStore } from \"@netless/flat-stores\";\nimport { RouteNameType, RouteParams, usePushHistory } from \"../utils/routes\";\nimport { cancelPeriodicRoom, cancelPeriodicSubRoom } from \"@netless/flat-server-api\";\nimport { useLoginCheck } from \"../utils/use-login-check\";\nimport { FLAT_WEB_BASE_URL } from \"../constants/process\";\n\nexport const PeriodicRoomDetailPage = observer<{}>(function PeriodicRoomDetailPage() {\n    useLoginCheck();\n    const t = useTranslate();\n\n    const params = useParams<RouteParams<RouteNameType.PeriodicRoomDetailPage>>();\n    const roomStore = useContext(RoomStoreContext);\n    const [cancelRoomUUIDList, setCancelRoomUUIDList] = useState<string[]>([]);\n    const history = useHistory();\n    const pushHistory = usePushHistory();\n    const previousPage = useLastLocation();\n    const pageStore = useContext(PageStoreContext);\n\n    useEffect(() => {\n        // if the room has been cancelled and return to the previous page, an error will be reported\n        function backPreviousPage(): void {\n            if (!previousPage?.pathname) {\n                return pushHistory(RouteNameType.HomePage);\n            }\n\n            const previousRouterContainRemoveRoomUUID = cancelRoomUUIDList.some(roomUUID => {\n                return previousPage.pathname.includes(roomUUID);\n            });\n\n            if (previousRouterContainRemoveRoomUUID) {\n                return pushHistory(RouteNameType.HomePage);\n            }\n\n            history.goBack();\n        }\n\n        const title = periodicInfo?.periodic.title;\n\n        pageStore.configure({\n            title: <h1 className=\"periodic-room-detail-page-header-title\">{title}</h1>,\n            onBackPreviousPage: backPreviousPage,\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const { periodicUUID } = params;\n\n    const periodicInfo = roomStore.periodicRooms.get(periodicUUID);\n    const rooms = periodicInfo?.rooms\n        .filter(roomUUID => !cancelRoomUUIDList.includes(roomUUID))\n        .map(roomUUID => roomStore.rooms.get(roomUUID));\n\n    useEffect(() => {\n        roomStore.syncPeriodicRoomInfo(periodicUUID).catch(errorTips);\n    }, [periodicUUID, roomStore]);\n\n    if (!periodicInfo || !rooms) {\n        return <LoadingPage timeMS={3 * 1000} />;\n    }\n\n    const { ownerUUID, ownerName } = periodicInfo.periodic;\n\n    const isCreator = globalStore.userUUID === ownerUUID;\n\n    const onCancelSubPeriodicRoom = async (\n        roomUUID: string,\n        periodicUUID: string,\n    ): Promise<void> => {\n        if (roomUUID) {\n            try {\n                await cancelPeriodicSubRoom({ roomUUID, periodicUUID });\n\n                const nextList = [...cancelRoomUUIDList, roomUUID];\n                const nextRooms = rooms.filter(room => {\n                    return room && !nextList.includes(room.roomUUID);\n                });\n\n                void message.success(t(\"the-room-has-been-cancelled\"));\n\n                if (nextRooms.length === 0) {\n                    pushHistory(RouteNameType.HomePage);\n                } else {\n                    setCancelRoomUUIDList(nextList);\n                }\n            } catch (err) {\n                console.log(err);\n                errorTips(err);\n            }\n        }\n    };\n\n    async function onCancelPeriodicRoom(): Promise<void> {\n        try {\n            if (periodicInfo) {\n                await cancelPeriodicRoom(periodicUUID);\n            }\n        } catch (err) {\n            errorTips(err);\n        }\n\n        pushHistory(RouteNameType.HomePage);\n        await message.success(t(\"the-room-has-been-cancelled\"));\n    }\n\n    function jumpToRoomDetailPage(roomUUID: string, periodicUUID: string): void {\n        pushHistory(RouteNameType.RoomDetailPage, {\n            periodicUUID,\n            roomUUID,\n        });\n    }\n\n    function jumpToModifyOrdinaryRoomPage(roomUUID: string, periodicUUID: string): void {\n        pushHistory(RouteNameType.ModifyOrdinaryRoomPage, {\n            periodicUUID,\n            roomUUID,\n        });\n    }\n\n    function jumpToModifyPeriodicRoomPage(): void {\n        if (periodicInfo) {\n            pushHistory(RouteNameType.ModifyPeriodicRoomPage, {\n                periodicUUID,\n            });\n        }\n    }\n\n    return (\n        <div className=\"periodic-room-detail-page-container\">\n            <PeriodicRoomPanel\n                inviteBaseUrl={FLAT_WEB_BASE_URL}\n                isCreator={isCreator}\n                jumpToModifyOrdinaryRoomPage={jumpToModifyOrdinaryRoomPage}\n                jumpToModifyPeriodicRoomPage={jumpToModifyPeriodicRoomPage}\n                jumpToRoomDetailPage={jumpToRoomDetailPage}\n                periodicInfo={periodicInfo.periodic}\n                rooms={rooms}\n                userName={ownerName}\n                onCancelPeriodicRoom={onCancelPeriodicRoom}\n                onCancelSubPeriodicRoom={onCancelSubPeriodicRoom}\n                onCopyInvitation={text => navigator.clipboard.writeText(text)}\n            />\n        </div>\n    );\n});\n\nexport default PeriodicRoomDetailPage;\n"],"names":["formatWithOptions","convertToFP","fn","moreMenuSVG","CancelSubPeriodicRoomModal","visible","isCreator","onCancel","onCancelSubPeriodicRoom","t","useTranslate","Modal","_jsx","Button","MoreMenu","room","userName","inviteBaseUrl","onCopyInvitation","jumpToRoomDetailPage","jumpToModifyOrdinaryRoomPage","cancelSubPeriodicRoomVisible","setCancelSubPeriodicRoomVisible","useState","inviteRoomVisible","setInviteRoomVisible","_Fragment","Dropdown","Menu","key","label","onClick","InviteModal","text","message","success","CancelPeriodicRoomModal","onCancelPeriodicRoom","title","content","PeriodicRoomPanel","rooms","periodicInfo","jumpToModifyPeriodicRoomPage","language","useLanguage","cancelPeriodicRoomModalVisible","setCancelPeriodicRoomModalVisible","locale","useMemo","startsWith","zhCN","enUS","yearMonthFormat","dayFormat","timeSuffixFormat","format","dayWeekFormat","hasRunning","some","RoomStatus","Started","Paused","includes","roomStatus","defaultDate","Date","renderPeriodicRoomTable","polymerizationRooms","result","forEach","beginTime","push","groupedList","Object","keys","sort","map","_jsxs","Table","_","getWeekName","getDay","endTime","RoomStatusElement","roomUUID","periodicUUID","week","getWeekNames","weeks","type","roomType","time","length","PeriodicRoomDetailPage","observer","useLoginCheck","params","useParams","roomStore","useContext","RoomStoreContext","cancelRoomUUIDList","setCancelRoomUUIDList","history","useHistory","pushHistory","usePushHistory","previousPage","useLastLocation","pageStore","PageStoreContext","useEffect","backPreviousPage","pathname","RouteNameType","HomePage","goBack","periodic","configure","onBackPreviousPage","periodicRooms","get","filter","syncPeriodicRoomInfo","catch","errorTips","LoadingPage","ownerUUID","ownerName","globalStore","userUUID","cancelPeriodicSubRoom","nextList","nextRooms","err","console","log","cancelPeriodicRoom","RoomDetailPage","ModifyOrdinaryRoomPage","ModifyPeriodicRoomPage","FLAT_WEB_BASE_URL","navigator","clipboard","writeText"],"mappings":"6hBAGA,MAAAA,EAAeC,GAAYC,EAAI,CAAC,ECHhCC,GAAe,yQCWFC,GAAwE,CAAC,CAClFC,QAAAA,EACAC,UAAAA,EACAC,SAAAA,EACAC,wBAAAA,CAJkF,IAKhF,CACF,MAAMC,EAAIC,IACV,SACKC,EAAD,CACI,OAAQ,CACJC,EAACC,EAAD,CAAqB,QAASN,EAA9B,SACiBE,EAAZH,EAAc,cAAmB,QAApB,CAAmB,EADzB,QAAZ,EAGAM,EAACC,EAAD,CAAiB,KAAK,UAAU,QAASL,EAAzC,SACKC,EAAE,SAAD,CADN,EAAY,IAAZ,CAJI,EAQR,KAAMJ,EACN,MAAOI,EAAE,aAAD,EACR,SAAAF,EAXJ,WAaI,OAAA,CAAA,SAAOE,EAAE,+BAAD,CAAA,CAAR,CAAA,CAdR,CAiBH,ECfYK,GAAoC,CAAC,CAC9CC,KAAAA,EACAC,SAAAA,EACAC,cAAAA,EACAX,UAAAA,EACAY,iBAAAA,EACAV,wBAAAA,EACAW,qBAAAA,EACAC,6BAAAA,CAR8C,IAS5C,CACF,MAAMX,EAAIC,IACJ,CAACW,EAA8BC,CAA/B,EAAkEC,mBAAS,EAAD,EAC1E,CAACC,EAAmBC,CAApB,EAA4CF,mBAAS,EAAD,EAE1D,SACIG,EAAA,CAAA,SAAA,CACId,EAACe,EAAD,CACI,QAAS,MAEAC,EAAD,CACI,MAAO,CACH,CACIC,IAAK,cACLC,MAAOrB,EAAE,aAAD,EACRsB,QAASZ,CAAAA,EAEb,GAAIb,EACE,CACI,CACIuB,IAAK,cACLC,MAAOrB,EAAE,aAAD,EACRsB,QAASX,CAAAA,EAEb,CACIS,IAAK,cACLC,MAAOrB,EAAE,aAAD,EACRsB,QAAS,IAAMT,EAAgC,EAAD,CATtD,CAAA,EAYA,CAAA,EACN,CACIO,IAAK,aACLC,MAAOrB,EAAE,YAAD,EACRsB,QAAS,IAAMN,EAAqB,EAAD,CAAA,CAvBpC,CAAA,CAFf,EA+BJ,QAAS,CAAC,OAAD,EAjCb,WAmCI,MAAA,CAAK,IAAKhB,EAAE,MAAD,EAAU,IAAKN,EAAAA,CAA1B,CAAA,CApCR,EAsCIS,EAACR,GAAD,CACI,UAAAE,EACA,QAASe,EACT,SAAU,IAAMC,EAAgC,EAAD,EAC/C,wBAAAd,CAAA,CA1CR,EA4CII,EAACoB,GAAD,CACI,QAASf,EACT,KAAAF,EACA,SAAAC,EACA,QAASQ,EACT,SAAU,IAAMC,EAAqB,EAAD,EACpC,OAAgBQ,GAAA,CACZf,EAAiBe,CAAD,EACXC,EAAQC,QAAQ1B,EAAE,cAAD,CAAjB,EACLgB,EAAqB,EAAD,CACvB,CAAA,CAtDT,CAAA,CAAA,CADJ,CA2DH,EClFYW,GAAkE,CAAC,CAC5E/B,QAAAA,EACAC,UAAAA,EACAC,SAAAA,EACA8B,qBAAAA,CAJ4E,IAK1E,CACF,MAAM5B,EAAIC,IACJ4B,GAAS,IAKJ7B,EAJFH,EAII,2BAHI,aAGL,KAGNiC,EAAU,IACPjC,IAIE,OAAA,CAAA,SAAOG,EAAE,2BAAD,CAAA,CAAf,IAHW,OAAA,CAAA,SAAOA,EAAE,qCAAD,CAAA,CAAf,EAMR,SACKE,EAAD,CACI,OAAQ,CACJC,EAACC,EAAD,CAAqB,QAASN,EAA9B,SACiBE,EAAZH,EAAc,cAAmB,QAApB,CAAmB,EADzB,QAAZ,EAGAM,EAACC,EAAD,CAAiB,KAAK,UAAU,QAASwB,EAAzC,SACK5B,EAAE,SAAD,CADN,EAAY,IAAZ,CAJI,EAQR,KAAMJ,EACN,MAAAiC,EACA,SAAA/B,EAXJ,SAaKgC,EAAO,CAAA,CAdhB,CAiBH,ECnBYC,GAAsD,CAAC,CAChEC,MAAAA,EACAzB,SAAAA,EACAC,cAAAA,EACAX,UAAAA,EACAoC,aAAAA,EACAxB,iBAAAA,EACAmB,qBAAAA,EACA7B,wBAAAA,EACAW,qBAAAA,EACAwB,6BAAAA,EACAvB,6BAAAA,CAXgE,IAY9D,CACF,MAAMX,EAAIC,IACJkC,EAAWC,IACX,CAACC,EAAgCC,CAAjC,EAAsExB,mBAAS,EAAD,EAE9EyB,EAASC,EAAAA,QAAAA,QAAQ,IAAOL,EAASM,WAAW,IAApB,EAA4BC,EAAOC,EAAO,CAACR,CAAD,CAAlD,EAChBS,EAAkBrD,EAAkB,CAAEgD,OAAAA,GAAU,SAAb,EACnCM,EAAYtD,EAAkB,CAAEgD,OAAAA,GAAU,IAAb,EAC7BO,EAAmBC,GAAO,OAAD,EACzBC,EAAgBzD,EAAkB,CAAEgD,OAAAA,GAAU,gBAAb,EAEjCU,EAAajB,EAAMkB,KAAK5C,GAC1B,CAAC6C,EAAWC,QAASD,EAAWE,MAAhC,EAAwCC,SAAShD,GAAAA,YAAAA,EAAMiD,UAAvD,CADe,EAIbC,EAAc,IAAIC,KAElBC,EAA0B,IAAuB,CACnD,MAAMC,GAAuB,IAAM,CAC/B,MAAMC,EAAqC,CAAA,EAE3C5B,OAAAA,EAAM6B,QAAgBvD,GAAA,CAClB,GAAIA,GAAAA,MAAAA,EAAMwD,UAAW,CACjB,MAAM1C,EAAMwC,EAAOhB,EAAgBtC,EAAKwD,SAAN,GAE9B1C,EACAA,EAAI2C,KAAKzD,CAAT,EAEAsD,EAAOhB,EAAgBtC,EAAKwD,SAAN,GAAoB,CAACxD,CAAD,CAEjD,CAAA,CATL,EAYOsD,CAAAA,KAGLI,EAAcC,OAAOC,KAAKP,CAAZ,EACfQ,KACAC,EAAAA,IACGhD,GAAAiD,EAAA,MAAA,CAAA,SACI,CAAAlE,EAAA,MAAA,CAAK,UAAU,kCAAf,SAAkDiB,CAAAA,CAAlD,EACAjB,EAAA,MAAA,CAAK,UAAU,gCAAA,CAFnB,EAGIkE,EAACC,EAAD,CACI,SAAU,GACV,WAAYX,EAAoBvC,GAChC,WAAY,GACZ,OAAO,WACP,WAAY,GALhB,SAOI,CAACjB,EAAAmE,EAAM,OAAP,CACI,MAAM,OACN,OAAQ,CAACC,EAAGjE,IAERuC,EAAUvC,EAAKwD,WAAaN,CAAnB,EAAkC,QAAA,CAJnD,EAOCrD,EAAAmE,EAAM,OAAP,CACI,MAAM,SACN,OAAQ,CAACC,EAAGjE,IACRkE,EAAYC,EAAOnE,EAAKwD,WAAaN,CAAnB,EAAiCrB,CAAxC,CAAA,CAHnB,EAMChC,EAAAmE,EAAM,OAAP,CACI,MAAM,SACN,OAAQ,CAACC,EAAGjE,IAEJwC,EAAiBxC,EAAKwD,WAAaN,CAAnB,EAChB,IACAV,EAAiBxC,EAAKoE,SAAWlB,CAAjB,CAEvB,CARL,EAUCrD,EAAAmE,EAAM,OAAP,CACI,MAAM,SACN,OAAQ,CAACC,EAAGjE,MACAqE,GAAD,CAAmB,KAAArE,CAAA,CAA1B,CACH,CAJL,EAMCH,EAAAmE,EAAM,OAAP,CACI,MAAM,QACN,OAAQ,CAACC,EAAGjE,MAEHD,GAAD,CACI,cAAAG,EACA,UAAAX,EACA,6BAA8B,IAC1Bc,EACIL,EAAKsE,SACLtE,EAAKuE,YAFmB,EAKhC,qBAAsB,IAClBnE,EAAqBJ,EAAKsE,SAAUtE,EAAKuE,YAArB,EAExB,KAAAvE,EACA,SAAAC,EACA,wBAAyB,IACrBR,EACIO,EAAKsE,SACLtE,EAAKuE,YAFc,EAK3B,iBAAApE,CAAA,CArBR,CAwBH,CA/DT,CAAA,CAAA,CAHJ,CAAA,CAAA,EAAUW,CAAV,CAHY,EA0EpB,SAAO,MAAA,CAAK,UAAU,sCAAf,SAAsD4C,CAAAA,CAA7D,CAAA,EAGJ,SACI/C,EAAA,CAAA,SACI,CAAAoD,EAAA,MAAA,CAAK,UAAU,gCAAf,SACI,CAAAA,EAAA,MAAA,CAAK,UAAU,2BAAf,SACI,CAAAlE,EAAA,MAAA,CAAK,UAAU,iCAAf,SACKH,EAAE,mBAAoB,CACnB8E,KAAMC,EAAa9C,EAAa+C,MAAO7C,CAArB,CAAA,CADpB,CAAA,CADN,EAKAhC,EAAA,MAAA,CAAK,UAAU,gCAAf,SACKH,EAAE,qBAAsB,CACrBiF,KAAMjF,EAAG,mBAAkBiC,EAAaiD,UAAjC,CAAA,CADT,CAAA,CADN,EAKA/E,EAAA,MAAA,CAAK,UAAU,iCAAf,SACKH,EAAE,uBAAwB,CACvBmF,KAAMnC,EAAcf,EAAayC,OAAd,EACnBU,OAAQpD,EAAMoD,MAAAA,CAFhB,CAAA,CAZV,CAAA,CAAA,CAAA,EAkBAjF,EAAA,MAAA,CAAK,UAAU,+BAAf,SACKN,EACGwE,EAAApD,EAAA,CAAA,SAAA,CACId,EAACC,EAAD,CAAQ,SAAU6C,EAAY,QAASf,EAAvC,SACKlC,EAAE,uBAAD,CAAA,CAFV,EAIIG,EAACC,EAAD,CACI,OADJ,GAEI,SAAU6C,EACV,QAAS,IAAMX,EAAkC,EAAD,EAHpD,SAKKtC,EAAE,0BAAD,CAAA,CATV,CAAA,CAAA,CADM,EAcNG,EAACC,EAAD,CAAQ,OAAR,GAAe,QAAS,IAAMkC,EAAkC,EAAD,EAA/D,SACKtC,EAAE,sBAAD,CAAA,CADN,CAAA,CAlCZ,EAuCK0D,EAAAA,CAvCL,CAAA,CADJ,EA0CIvD,EAACwB,GAAD,CACI,UAAA9B,EACA,QAASwC,EACT,SAAU,IAAMC,EAAkC,EAAD,EACjD,qBAAAV,CAAA,CA9CR,CAAA,CAAA,CADJ,CAmDH,EChMYyD,MAAAA,GAAyBC,EAAa,UAAkC,CACpEC,KACb,MAAMvF,EAAIC,IAEJuF,EAASC,IACTC,EAAYC,qBAAWC,CAAD,EACtB,CAACC,EAAoBC,CAArB,EAA8ChF,EAAAA,QAAAA,SAAmB,CAAX,CAAA,EACtDiF,EAAUC,IACVC,EAAcC,KACdC,EAAeC,GAAAA,QAAAA,kBACfC,EAAYV,qBAAWW,EAAD,EAE5BC,EAAAA,QAAAA,UAAU,IAAM,CAEZ,SAASC,GAAyB,CAC1B,GAAA,EAACL,GAAAA,MAAAA,EAAcM,UACRR,OAAAA,EAAYS,EAAcC,QAAf,EAOtB,GAJ4Cd,EAAmB3C,KAAiB0B,GACrEuB,EAAaM,SAASnD,SAASsB,CAA/B,CADiC,EAKjCqB,OAAAA,EAAYS,EAAcC,QAAf,EAGtBZ,EAAQa,OAAR,CACH,CAEK/E,MAAAA,EAAQI,GAAAA,YAAAA,EAAc4E,SAAShF,MAErCwE,EAAUS,UAAU,CAChBjF,QAAO,KAAA,CAAI,UAAU,yCAAd,SAAwDA,CAAAA,CAD/C,EAEhBkF,mBAAoBP,CAAAA,CAFxB,CAKH,EAAE,CAzBM,CAAA,EA2BH,KAAA,CAAE3B,aAAAA,CAAiBW,EAAAA,EAEnBvD,EAAeyD,EAAUsB,cAAcC,IAAIpC,CAA5B,EACf7C,EAAQC,GAAAA,YAAAA,EAAcD,MACvBkF,OAAOtC,GAAY,CAACiB,EAAmBvC,SAASsB,CAA5B,GACpBR,IAAIQ,GAAYc,EAAU1D,MAAMiF,IAAIrC,CAApB,GAMjB,GAJJ2B,EAAAA,QAAAA,UAAU,IAAM,CACZb,EAAUyB,qBAAqBtC,CAA/B,EAA6CuC,MAAMC,CAAnD,CAAA,EACD,CAACxC,EAAca,CAAf,CAFM,EAIL,CAACzD,GAAgB,CAACD,EAClB,SAAQsF,GAAD,CAAa,OAAQ,EAAI,GAAA,CAAhC,EAGE,KAAA,CAAEC,UAAAA,EAAWC,UAAAA,CAAAA,EAAcvF,EAAa4E,SAExChH,EAAY4H,GAAYC,WAAaH,EAErCxH,EAA0B,MAC5B6E,EACAC,IACgB,CAChB,GAAID,EACI,GAAA,CACA,MAAM+C,GAAsB,CAAE/C,SAAAA,EAAUC,aAAAA,CAAAA,CAAb,EAE3B,MAAM+C,EAAW,CAAC,GAAG/B,EAAoBjB,CAAxB,EACXiD,EAAY7F,EAAMkF,OAAe5G,GAC5BA,GAAQ,CAACsH,EAAStE,SAAShD,EAAKsE,QAAvB,CADF,EAIbnD,EAAQC,QAAQ1B,EAAE,6BAAD,CAAjB,EAED6H,EAAUzC,SAAW,EACrBa,EAAYS,EAAcC,QAAf,EAEXb,EAAsB8B,CAAD,QAEpBE,GACLC,QAAQC,IAAIF,CAAZ,EACAT,EAAUS,CAAD,CACZ,CACJ,EAGL,eAAelG,GAAsC,CAC7C,GAAA,CACIK,GACA,MAAMgG,GAAmBpD,CAAD,QAEvBiD,GACLT,EAAUS,CAAD,CACZ,CAED7B,EAAYS,EAAcC,QAAf,EACX,MAAMlF,EAAQC,QAAQ1B,EAAE,6BAAD,CAAjB,CACT,CAEQU,SAAAA,EAAqBkE,EAAkBC,EAA4B,CACxEoB,EAAYS,EAAcwB,eAAgB,CACtCrD,aAAAA,EACAD,SAAAA,CAAAA,CAFO,CAId,CAEQjE,SAAAA,EAA6BiE,EAAkBC,EAA4B,CAChFoB,EAAYS,EAAcyB,uBAAwB,CAC9CtD,aAAAA,EACAD,SAAAA,CAAAA,CAFO,CAId,CAED,SAAS1C,GAAqC,CACtCD,GACAgE,EAAYS,EAAc0B,uBAAwB,CAC9CvD,aAAAA,CAAAA,CADO,CAIlB,CAED,SACI,MAAA,CAAK,UAAU,sCAAf,WACK9C,GAAD,CACI,cAAesG,GACf,UAAAxI,EACA,6BAAAc,EACA,6BAAAuB,EACA,qBAAAxB,EACA,aAAcuB,EAAa4E,SAC3B,MAAA7E,EACA,SAAUwF,EACV,qBAAA5F,EACA,wBAAA7B,EACA,iBAAkByB,GAAQ8G,UAAUC,UAAUC,UAAUhH,CAA9B,CAAA,CAX9B,CAAA,CAFR,CAiBH,CAzI6C"}