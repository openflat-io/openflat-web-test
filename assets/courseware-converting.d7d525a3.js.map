{"version":3,"file":"courseware-converting.d7d525a3.js","sources":["../../../../service-providers/file-convert-netless/src/courseware-converting.ts"],"sourcesContent":["import {\n    FileResourceType,\n    getWhiteboardTaskData,\n    metaType,\n    ResourceType,\n} from \"@netless/flat-server-api\";\n\nexport interface ConvertingTaskStatus {\n    uuid: string;\n    type: \"static\" | \"dynamic\";\n    status: \"Waiting\" | \"Converting\" | \"Finished\" | \"Fail\" | \"Abort\";\n    errorCode?: string;\n    errorMessage?: string;\n    convertedPercentage?: number;\n    prefix?: string;\n    // TODO: `progress` is for static resources and will be changed in the future.\n    progress?: ConvertingTaskStatusLegacy[\"progress\"];\n}\n\nexport interface ConvertingTaskStatusLegacy {\n    uuid: string;\n    type: \"static\" | \"dynamic\";\n    status: \"Waiting\" | \"Converting\" | \"Finished\" | \"Fail\" | \"Abort\";\n    failedReason?: string;\n    progress?: {\n        totalPageSize: number;\n        convertedPageSize: number;\n        convertedPercentage: number;\n        convertedFileList: Array<{\n            width: number;\n            height: number;\n            conversionFileUrl: string;\n            preview?: string;\n        }>;\n        currentStep: \"Extracting\" | \"Packaging\" | \"GeneratingPreview\" | \"MediaTranscode\";\n    };\n}\n\nexport interface QueryConvertingParams {\n    dynamic: boolean;\n    meta: metaType;\n    resourceType: ResourceType;\n}\n\nexport async function queryConvertingTaskStatus(\n    params: QueryConvertingParams,\n): Promise<ConvertingTaskStatus> {\n    const { meta, resourceType, dynamic } = params;\n\n    const whiteboardTaskData = getWhiteboardTaskData(resourceType, meta);\n    if (whiteboardTaskData === null) {\n        throw new Error(\"get whiteboard task data error!\");\n    }\n\n    // When the convertStart method is called, the taskUUID and taskToken are definitely exist.\n    const { taskUUID, taskToken } = whiteboardTaskData;\n\n    if (resourceType === FileResourceType.WhiteboardProjector) {\n        const response = await fetch(`https://api.netless.link/v5/projector/tasks/${taskUUID}`, {\n            headers: { token: taskToken! },\n        });\n        return response.json();\n    } else {\n        const response = await fetch(\n            `https://api.netless.link/v5/services/conversion/tasks/${taskUUID}?type=${\n                dynamic ? \"dynamic\" : \"static\"\n            }`,\n            { headers: { token: taskToken! } },\n        );\n        const data = await response.json();\n        const prefix = data.progress?.convertedFileList?.[0]?.conversionFileUrl || \"\";\n        const index = prefix.lastIndexOf(\"/staticConvert\") + 1;\n        const transformed: ConvertingTaskStatus = {\n            uuid: data.uuid,\n            type: data.type,\n            status: data.status,\n            errorMessage: data.failedReason,\n            convertedPercentage: data.progress?.convertedPercentage,\n            prefix: prefix ? prefix.slice(0, index) : undefined,\n            progress: data.progress,\n        };\n        return transformed;\n    }\n}\n"],"names":["queryConvertingTaskStatus","params","meta","resourceType","dynamic","whiteboardTaskData","getWhiteboardTaskData","taskUUID","taskToken","FileResourceType","data","prefix","_c","_b","_a","index","_d"],"mappings":"+CA4CA,eAAsBA,EAClBC,EAC6B,aAC7B,KAAM,CAAE,KAAAC,EAAM,aAAAC,EAAc,QAAAC,CAAA,EAAYH,EAElCI,EAAqBC,EAAsBH,EAAcD,CAAI,EACnE,GAAIG,IAAuB,KACjB,MAAA,IAAI,MAAM,iCAAiC,EAI/C,KAAA,CAAE,SAAAE,EAAU,UAAAC,CAAc,EAAAH,EAE5B,GAAAF,IAAiBM,EAAiB,oBAIlC,OAHiB,MAAM,MAAM,+CAA+CF,IAAY,CACpF,QAAS,CAAE,MAAOC,CAAW,CAAA,CAChC,GACe,OACb,CAOG,MAAAE,EAAO,MANI,MAAM,MACnB,yDAAyDH,UACrDH,EAAU,UAAY,WAE1B,CAAE,QAAS,CAAE,MAAOI,EAAa,CAAA,GAET,OACtBG,IAASC,GAAAC,GAAAC,EAAAJ,EAAK,WAAL,YAAAI,EAAe,oBAAf,YAAAD,EAAmC,KAAnC,YAAAD,EAAuC,oBAAqB,GACrEG,EAAQJ,EAAO,YAAY,gBAAgB,EAAI,EAU9C,MATmC,CACtC,KAAMD,EAAK,KACX,KAAMA,EAAK,KACX,OAAQA,EAAK,OACb,aAAcA,EAAK,aACnB,qBAAqBM,EAAAN,EAAK,WAAL,YAAAM,EAAe,oBACpC,OAAQL,EAASA,EAAO,MAAM,EAAGI,CAAK,EAAI,OAC1C,SAAUL,EAAK,QAAA,CAGvB,CACJ"}