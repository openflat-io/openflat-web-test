{"version":3,"file":"SVGUserGroup.adcc3976.js","sources":["../../../../node_modules/.pnpm/date-fns@2.29.3/node_modules/date-fns/esm/compareAsc/index.js","../../../../packages/flat-components/src/components/FlatIcons/icons/SVGUserGroup.tsx"],"sourcesContent":["import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import \"../style.less\";\nimport React from \"react\";\nimport { FlatIconProps } from \"../types\";\n\nexport const SVGUserGroup: React.FC<FlatIconProps> = ({ active, className = \"\", ...restProps }) => {\n    return (\n        <svg\n            className={`${className} flat-icon ${active ? \"is-active\" : \"\"}`}\n            fill=\"none\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            width=\"24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            {...restProps}\n        >\n            <path\n                className=\"flat-icon-fill-color\"\n                d=\"m6.449 12.194-.294-.552.294.552Zm.051.681.243-.13-.588-1.103-.243.13.588 1.103Zm2.468-2.414.091-.181-1.118-.56-.09.182 1.117.559Zm-.593-2.272V6.25h-1.25v1.94h1.25ZM10 4.625h.25v-1.25H10v1.25ZM8.375 6.25c0-.897.728-1.625 1.625-1.625v-1.25A2.875 2.875 0 0 0 7.125 6.25h1.25Zm.567 3.308a1.936 1.936 0 0 1-.567-1.369h-1.25c0 .845.336 1.656.933 2.253l.884-.884Zm-2.199 3.187a5.25 5.25 0 0 0 2.225-2.284L7.85 9.9a4 4 0 0 1-1.695 1.741l.588 1.103Zm3.507-8.12c.76 0 1.375.616 1.375 1.375h1.25a2.625 2.625 0 0 0-2.625-2.625v1.25ZM4.625 16c0-1.308.72-2.51 1.875-3.125l-.588-1.103A4.792 4.792 0 0 0 3.375 16h1.25Zm13.169.323-.294.552.294-.552Zm-.243-.13-.294.552.294-.551Zm-7.102 0-.294-.55.294.55Zm.051.682.243-.13-.588-1.103-.243.13.588 1.103Zm2.469-2.414.09-.181-1.118-.56-.09.182 1.117.559Zm-.594-2.272V10.25h-1.25v1.94h1.25Zm3.25-1.939v1.94h1.25v-1.94h-1.25Zm-.684 4.03.09.18 1.119-.558-.091-.181-1.118.559Zm2.316 2.465.243.13.588-1.103-.243-.13-.588 1.103Zm.243.13A3.542 3.542 0 0 1 19.375 20h1.25a4.79 4.79 0 0 0-2.537-4.228l-.588 1.103Zm-2.469-2.414a5.251 5.251 0 0 0 2.226 2.284l.588-1.103a4 4 0 0 1-1.695-1.74l-1.118.559Zm.594-2.272a1.94 1.94 0 0 1-.567 1.37l.884.883a3.185 3.185 0 0 0 .933-2.253h-1.25Zm-3.25-1.939c0-.897.727-1.625 1.625-1.625v-1.25a2.875 2.875 0 0 0-2.875 2.875h1.25Zm.567 3.308a1.936 1.936 0 0 1-.567-1.369h-1.25c0 .845.336 1.655.933 2.253l.884-.884Zm-2.199 3.187a5.251 5.251 0 0 0 2.226-2.284l-1.119-.56a4 4 0 0 1-1.695 1.741l.588 1.103ZM14 8.625c.898 0 1.625.728 1.625 1.625h1.25A2.875 2.875 0 0 0 14 7.375v1.25ZM8.625 20c0-1.308.72-2.51 1.875-3.125l-.588-1.103A4.792 4.792 0 0 0 7.375 20h1.25Z\"\n                fill=\"#5D6066\"\n            ></path>\n        </svg>\n    );\n};\n\nexport default SVGUserGroup;\n"],"names":["compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","dateLeft","toDate","dateRight","diff","SVGUserGroup","active","className","restProps"],"mappings":"wDAmCe,SAASA,EAAWC,EAAeC,EAAgB,CAChEC,EAAa,EAAG,SAAS,EACzB,IAAIC,EAAWC,EAAOJ,CAAa,EAC/BK,EAAYD,EAAOH,CAAc,EACjCK,EAAOH,EAAS,QAAS,EAAGE,EAAU,QAAO,EAEjD,OAAIC,EAAO,EACF,GACEA,EAAO,EACT,EAEAA,CAEX,CC5CO,MAAMC,EAAwC,CAAC,CAAEC,OAAAA,EAAQC,UAAAA,EAAY,MAAOC,CAA7B,MAE9C,MAAA,CACI,UAAY,GAAED,eAAuBD,EAAS,YAAc,KAC5D,KAAK,OACL,OAAO,KACP,QAAQ,YACR,MAAM,KACN,MAAM,6BANV,GAOQE,EAPR,WASI,OAAA,CACI,UAAU,uBACV,EAAE,klDACF,KAAK,SAAA,CAHT,CAAA,CAVR"}