{"version":3,"file":"WeChatLogin.40ae371f.js","sources":["../../../../packages/flat-pages/src/LoginPage/githubLogin.ts","../../../../packages/flat-pages/src/LoginPage/WeChatLogin.tsx"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { LoginExecutor } from \"./utils\";\nimport { errorTips } from \"flat-components\";\nimport { FLAT_SERVER_LOGIN, setAuthUUID, loginProcess } from \"@netless/flat-server-api\";\nimport { GITHUB } from \"../constants/process\";\n\nexport const githubLogin: LoginExecutor = (onSuccess, windowsBtn) => {\n    let timer = NaN;\n    const authUUID = uuidv4();\n\n    void (async () => {\n        try {\n            await setAuthUUID(authUUID);\n        } catch (err) {\n            errorTips(err);\n            return;\n        }\n\n        windowsBtn\n            ? windowsBtn.openExternalBrowser(\n                  getGithubURL(authUUID, FLAT_SERVER_LOGIN.GITHUB_CALLBACK),\n              )\n            : void window.open(getGithubURL(authUUID, FLAT_SERVER_LOGIN.GITHUB_CALLBACK));\n\n        const githubLoginProcessRequest = async (): Promise<void> => {\n            try {\n                const data = await loginProcess(authUUID);\n\n                if (!data.name) {\n                    timer = window.setTimeout(githubLoginProcessRequest, 2000);\n                    return;\n                }\n\n                onSuccess(data);\n            } catch (err) {\n                errorTips(err);\n            }\n        };\n\n        void githubLoginProcessRequest();\n    })();\n\n    return () => {\n        window.clearTimeout(timer);\n    };\n};\n\nexport function getGithubURL(authUUID: string, redirect_uri: string): string {\n    const redirectURL = encodeURIComponent(redirect_uri);\n    return `https://github.com/login/oauth/authorize?client_id=${GITHUB.CLIENT_ID}&redirect_uri=${redirectURL}&state=${authUUID}`;\n}\n","import \"./WeChatLogin.less\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslate } from \"@netless/flat-i18n\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { observer } from \"mobx-react-lite\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n    loginProcess,\n    LoginProcessResult,\n    setAuthUUID,\n    FLAT_SERVER_LOGIN,\n} from \"@netless/flat-server-api\";\nimport { errorTips } from \"flat-components\";\nimport { WECHAT } from \"../constants/process\";\nimport { useSafePromise } from \"../utils/hooks/lifecycle\";\n\nexport interface WeChatLoginProps {\n    setLoginResult: (result: LoginProcessResult) => void;\n}\n\nexport const WeChatLogin = observer(function WeChatLogin({ setLoginResult }: WeChatLoginProps) {\n    const [qrCodeURL, setQRCodeURL] = useState(\"\");\n    const sp = useSafePromise();\n\n    const t = useTranslate();\n\n    useEffect(() => {\n        const authUUID = uuidv4();\n        const ticket: { current?: number } = {};\n\n        setQRCodeURL(getQRCodeURL(authUUID));\n\n        const loginProcessRequest = (ticket: { current?: number }, authUUID: string): void => {\n            ticket.current = window.setTimeout(async () => {\n                const data = await sp(loginProcess(authUUID));\n                if (data.userUUID === \"\") {\n                    loginProcessRequest(ticket, authUUID);\n                } else {\n                    setLoginResult(data);\n                }\n            }, 2000);\n        };\n\n        sp(setAuthUUID(authUUID))\n            .then(loginProcessRequest.bind(null, ticket, authUUID))\n            .catch(errorTips);\n\n        return () => {\n            window.clearTimeout(ticket.current);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"wechat-login-container\">\n            <iframe\n                className=\"wechat-login-iframe\"\n                frameBorder=\"0\"\n                scrolling=\"no\"\n                src={qrCodeURL}\n                title=\"wechat\"\n            />\n            <div className=\"wechat-login-spin\">\n                <LoadingOutlined spin />\n            </div>\n            <span className=\"wechat-login-text\">{t(\"wechat-login-tips\")}</span>\n        </div>\n    );\n});\n\nexport default WeChatLogin;\n\nexport function getQRCodeURL(\n    authUUID: string,\n    redirect_uri: string = FLAT_SERVER_LOGIN.WECHAT_CALLBACK,\n): string {\n    const redirectURL = encodeURIComponent(`${redirect_uri}`);\n    const qrCodeStyle = `\n        .impowerBox .qrcode {\n            width: 238px;\n            margin: 0;\n        }\n        .impowerBox .title {\n            display: none;\n        }\n        .status_icon {\n            display: none;\n        }\n        .impowerBox .status {\n            text-align: center;\n        }\n        .impowerBox .info {\n            display: none;\n        }\n    `;\n\n    return `https://open.weixin.qq.com/connect/qrconnect?appid=${\n        WECHAT.APP_ID\n    }&scope=snsapi_login&redirect_uri=${redirectURL}&state=${authUUID}&login_type=jssdk&self_redirect=true&style=black&href=data:text/css;base64,${window.btoa(\n        qrCodeStyle,\n    )}`;\n}\n"],"names":["githubLogin","onSuccess","windowsBtn","timer","authUUID","uuidv4","setAuthUUID","err","errorTips","getGithubURL","FLAT_SERVER_LOGIN","githubLoginProcessRequest","data","loginProcess","redirect_uri","redirectURL","GITHUB","WeChatLogin","observer","setLoginResult","qrCodeURL","setQRCodeURL","useState","sp","useSafePromise","t","useTranslate","useEffect","ticket","getQRCodeURL","loginProcessRequest","current","window","setTimeout","userUUID","then","bind","catch","clearTimeout","_jsx","LoadingOutlined","WECHAT_CALLBACK","encodeURIComponent","qrCodeStyle","WECHAT","APP_ID","btoa"],"mappings":"gNAMa,MAAAA,EAA6B,CAACC,EAAWC,IAAe,CACjE,IAAIC,EAAQ,IACZ,MAAMC,EAAWC,IAEjB,OAAM,SAAY,CACV,GAAA,CACA,MAAMC,EAAYF,CAAQ,QACrBG,GACLC,EAAUD,CAAG,EACb,MACJ,CAEAL,EACMA,EAAW,oBACPO,EAAaL,EAAUM,EAAkB,eAAe,CAAA,EAEvD,OAAO,KAAKD,EAAaL,EAAUM,EAAkB,eAAe,CAAC,EAEhF,MAAMC,EAA4B,SAA2B,CACrD,GAAA,CACM,MAAAC,EAAO,MAAMC,EAAaT,CAAQ,EAEpC,GAAA,CAACQ,EAAK,KAAM,CACJT,EAAA,OAAO,WAAWQ,EAA2B,GAAI,EACzD,MACJ,CAEAV,EAAUW,CAAI,QACTL,GACLC,EAAUD,CAAG,CACjB,CAAA,EAGCI,EAA0B,CAAA,KAG5B,IAAM,CACT,OAAO,aAAaR,CAAK,CAAA,CAEjC,EAEgB,SAAAM,EAAaL,EAAkBU,EAA8B,CACnE,MAAAC,EAAc,mBAAmBD,CAAY,EAC5C,MAAA,sDAAsDE,EAAO,0BAA0BD,WAAqBX,GACvH,CC7Baa,MAAAA,EAAcC,EAAS,SAAqB,CAAEC,eAAAA,CAAF,EAAsC,CAC3F,KAAM,CAACC,EAAWC,CAAZ,EAA4BC,mBAAS,EAAD,EACpCC,EAAKC,IAELC,EAAIC,IAEVC,OAAAA,EAAAA,QAAAA,UAAU,IAAM,CACZ,MAAMvB,EAAWC,IACXuB,EAA+B,CAAA,EAExBC,EAAAA,EAAazB,CAAD,CAAb,EAEN0B,MAAAA,EAAsB,CAACF,EAA8BxB,IAA2B,CAClFwB,EAAOG,QAAUC,OAAOC,WAAW,SAAY,CAC3C,MAAMrB,EAAO,MAAMW,EAAGV,EAAaT,CAAD,CAAb,EACjBQ,EAAKsB,WAAa,GAClBJ,EAAoBF,EAAQxB,CAAT,EAEnBe,EAAeP,CAAD,GAEnB,GAPc,CAAA,EAUrBW,OAAAA,EAAGjB,EAAYF,CAAD,CAAZ,EACG+B,KAAKL,EAAoBM,KAAK,KAAMR,EAAQxB,CAAvC,CADV,EAEKiC,MAAM7B,CAFX,EAIO,IAAM,CACF8B,OAAAA,aAAaV,EAAOG,OAA3B,CAAA,CAGP,EAAE,CAzBM,CAAA,IA4BL,MAAA,CAAK,UAAU,yBAAf,SACI,CAAAQ,EAAA,SAAA,CACI,UAAU,sBACV,YAAY,IACZ,UAAU,KACV,IAAKnB,EACL,MAAM,QAAA,CALV,EAOAmB,EAAA,MAAA,CAAK,UAAU,oBAAf,WACKC,EAAD,CAAiB,KAAI,EAAA,CAArB,CAAA,CADJ,EAGAD,EAAA,OAAA,CAAM,UAAU,oBAAhB,SAAqCd,EAAE,mBAAD,CAAA,CAX1C,CAAA,CAAA,CADJ,CAeH,CAhDkC,EAoD5B,SAASI,EACZzB,EACAU,EAAuBJ,EAAkB+B,gBACnC,CACA1B,MAAAA,EAAc2B,mBAAoB,GAAE5B,GAAJ,EAChC6B,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBrB,MAAQ,sDACJC,EAAOC,0CACyB9B,WAAqBX,+EAAsF4B,OAAOc,KAClJH,CAD2I,GAGlJ"}