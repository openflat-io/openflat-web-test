{"version":3,"file":"main.es.335a9df7.js","sources":["../../../../node_modules/.pnpm/@netless+app-iframe-bridge@0.0.2/node_modules/@netless/app-iframe-bridge/dist/main.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nclass s {\n  constructor() {\n    this.disposers = new Map(), this.disposerIDGenCount = -1;\n  }\n  add(s2, e = this.genDisposerID()) {\n    return this.flush(e), this.disposers.set(e, s2()), e;\n  }\n  addEventListener(s2, e, t, r, i = this.genDisposerID()) {\n    return this.add(() => (s2.addEventListener(e, t, r), () => s2.removeEventListener(e, t, r)), i), i;\n  }\n  setTimeout(s2, e, t = this.genDisposerID()) {\n    return this.add(() => {\n      const r = window.setTimeout(() => {\n        this.remove(t), s2();\n      }, e);\n      return () => window.clearTimeout(r);\n    }, t);\n  }\n  setInterval(s2, e, t = this.genDisposerID()) {\n    return this.add(() => {\n      const t2 = window.setInterval(s2, e);\n      return () => window.clearInterval(t2);\n    }, t);\n  }\n  remove(s2) {\n    const e = this.disposers.get(s2);\n    return this.disposers.delete(s2), e;\n  }\n  flush(s2) {\n    const e = this.remove(s2);\n    if (e)\n      try {\n        e();\n      } catch (t) {\n        console.error(t);\n      }\n  }\n  flushAll() {\n    this.disposers.forEach((s2) => {\n      try {\n        s2();\n      } catch (e) {\n        console.error(e);\n      }\n    }), this.disposers.clear();\n  }\n  genDisposerID() {\n    const { MAX_SAFE_INTEGER: s2 = 9007199254740991 } = Number;\n    return this.disposerIDGenCount = (this.disposerIDGenCount + 1) % s2, `disposer-${this.disposerIDGenCount}`;\n  }\n}\nfunction isObject(val) {\n  return val != null && typeof val === \"object\" && !Array.isArray(val);\n}\nfunction ensureAttributes(context, initAttrs) {\n  let attrs = context.getAttributes();\n  if (!attrs) {\n    context.setAttributes(initAttrs);\n    attrs = context.getAttributes();\n  }\n  if (!attrs) {\n    throw new Error(\"[NetlessAppMonaco] No attributes\");\n  }\n  if (isObject(initAttrs)) {\n    Object.keys(initAttrs).forEach((key) => {\n      if (!Object.prototype.hasOwnProperty.call(attrs, key)) {\n        context.updateAttributes([key], initAttrs[key]);\n      }\n    });\n  }\n  return attrs;\n}\nconst anyMap = new WeakMap();\nconst eventsMap = new WeakMap();\nconst producersMap = new WeakMap();\nconst anyProducer = Symbol(\"anyProducer\");\nconst resolvedPromise = Promise.resolve();\nconst listenerAdded = Symbol(\"listenerAdded\");\nconst listenerRemoved = Symbol(\"listenerRemoved\");\nlet isGlobalDebugEnabled = false;\nfunction assertEventName(eventName) {\n  if (typeof eventName !== \"string\" && typeof eventName !== \"symbol\") {\n    throw new TypeError(\"eventName must be a string or a symbol\");\n  }\n}\nfunction assertListener(listener) {\n  if (typeof listener !== \"function\") {\n    throw new TypeError(\"listener must be a function\");\n  }\n}\nfunction getListeners(instance, eventName) {\n  const events = eventsMap.get(instance);\n  if (!events.has(eventName)) {\n    events.set(eventName, new Set());\n  }\n  return events.get(eventName);\n}\nfunction getEventProducers(instance, eventName) {\n  const key = typeof eventName === \"string\" || typeof eventName === \"symbol\" ? eventName : anyProducer;\n  const producers = producersMap.get(instance);\n  if (!producers.has(key)) {\n    producers.set(key, new Set());\n  }\n  return producers.get(key);\n}\nfunction enqueueProducers(instance, eventName, eventData) {\n  const producers = producersMap.get(instance);\n  if (producers.has(eventName)) {\n    for (const producer of producers.get(eventName)) {\n      producer.enqueue(eventData);\n    }\n  }\n  if (producers.has(anyProducer)) {\n    const item = Promise.all([eventName, eventData]);\n    for (const producer of producers.get(anyProducer)) {\n      producer.enqueue(item);\n    }\n  }\n}\nfunction iterator(instance, eventNames) {\n  eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n  let isFinished = false;\n  let flush = () => {\n  };\n  let queue = [];\n  const producer = {\n    enqueue(item) {\n      queue.push(item);\n      flush();\n    },\n    finish() {\n      isFinished = true;\n      flush();\n    }\n  };\n  for (const eventName of eventNames) {\n    getEventProducers(instance, eventName).add(producer);\n  }\n  return {\n    async next() {\n      if (!queue) {\n        return { done: true };\n      }\n      if (queue.length === 0) {\n        if (isFinished) {\n          queue = void 0;\n          return this.next();\n        }\n        await new Promise((resolve) => {\n          flush = resolve;\n        });\n        return this.next();\n      }\n      return {\n        done: false,\n        value: await queue.shift()\n      };\n    },\n    async return(value) {\n      queue = void 0;\n      for (const eventName of eventNames) {\n        getEventProducers(instance, eventName).delete(producer);\n      }\n      flush();\n      return arguments.length > 0 ? { done: true, value: await value } : { done: true };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n  };\n}\nfunction defaultMethodNamesOrAssert(methodNames) {\n  if (methodNames === void 0) {\n    return allEmitteryMethods;\n  }\n  if (!Array.isArray(methodNames)) {\n    throw new TypeError(\"`methodNames` must be an array of strings\");\n  }\n  for (const methodName of methodNames) {\n    if (!allEmitteryMethods.includes(methodName)) {\n      if (typeof methodName !== \"string\") {\n        throw new TypeError(\"`methodNames` element must be a string\");\n      }\n      throw new Error(`${methodName} is not Emittery method`);\n    }\n  }\n  return methodNames;\n}\nconst isListenerSymbol = (symbol) => symbol === listenerAdded || symbol === listenerRemoved;\nclass Emittery {\n  static mixin(emitteryPropertyName, methodNames) {\n    methodNames = defaultMethodNamesOrAssert(methodNames);\n    return (target) => {\n      if (typeof target !== \"function\") {\n        throw new TypeError(\"`target` must be function\");\n      }\n      for (const methodName of methodNames) {\n        if (target.prototype[methodName] !== void 0) {\n          throw new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n        }\n      }\n      function getEmitteryProperty() {\n        Object.defineProperty(this, emitteryPropertyName, {\n          enumerable: false,\n          value: new Emittery()\n        });\n        return this[emitteryPropertyName];\n      }\n      Object.defineProperty(target.prototype, emitteryPropertyName, {\n        enumerable: false,\n        get: getEmitteryProperty\n      });\n      const emitteryMethodCaller = (methodName) => function(...args) {\n        return this[emitteryPropertyName][methodName](...args);\n      };\n      for (const methodName of methodNames) {\n        Object.defineProperty(target.prototype, methodName, {\n          enumerable: false,\n          value: emitteryMethodCaller(methodName)\n        });\n      }\n      return target;\n    };\n  }\n  static get isDebugEnabled() {\n    if (typeof process !== \"object\") {\n      return isGlobalDebugEnabled;\n    }\n    const { env } = process || { env: {} };\n    return env.DEBUG === \"emittery\" || env.DEBUG === \"*\" || isGlobalDebugEnabled;\n  }\n  static set isDebugEnabled(newValue) {\n    isGlobalDebugEnabled = newValue;\n  }\n  constructor(options = {}) {\n    anyMap.set(this, new Set());\n    eventsMap.set(this, new Map());\n    producersMap.set(this, new Map());\n    this.debug = options.debug || {};\n    if (this.debug.enabled === void 0) {\n      this.debug.enabled = false;\n    }\n    if (!this.debug.logger) {\n      this.debug.logger = (type, debugName, eventName, eventData) => {\n        eventData = JSON.stringify(eventData);\n        if (typeof eventName === \"symbol\") {\n          eventName = eventName.toString();\n        }\n        const currentTime = new Date();\n        const logTime = `${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}.${currentTime.getMilliseconds()}`;\n        console.log(`[${logTime}][emittery:${type}][${debugName}] Event Name: ${eventName}\n\tdata: ${eventData}`);\n      };\n    }\n  }\n  logIfDebugEnabled(type, eventName, eventData) {\n    if (Emittery.isDebugEnabled || this.debug.enabled) {\n      this.debug.logger(type, this.debug.name, eventName, eventData);\n    }\n  }\n  on(eventNames, listener) {\n    assertListener(listener);\n    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n    for (const eventName of eventNames) {\n      assertEventName(eventName);\n      getListeners(this, eventName).add(listener);\n      this.logIfDebugEnabled(\"subscribe\", eventName, void 0);\n      if (!isListenerSymbol(eventName)) {\n        this.emit(listenerAdded, { eventName, listener });\n      }\n    }\n    return this.off.bind(this, eventNames, listener);\n  }\n  off(eventNames, listener) {\n    assertListener(listener);\n    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n    for (const eventName of eventNames) {\n      assertEventName(eventName);\n      getListeners(this, eventName).delete(listener);\n      this.logIfDebugEnabled(\"unsubscribe\", eventName, void 0);\n      if (!isListenerSymbol(eventName)) {\n        this.emit(listenerRemoved, { eventName, listener });\n      }\n    }\n  }\n  once(eventNames) {\n    return new Promise((resolve) => {\n      const off = this.on(eventNames, (data) => {\n        off();\n        resolve(data);\n      });\n    });\n  }\n  events(eventNames) {\n    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n    for (const eventName of eventNames) {\n      assertEventName(eventName);\n    }\n    return iterator(this, eventNames);\n  }\n  async emit(eventName, eventData) {\n    assertEventName(eventName);\n    this.logIfDebugEnabled(\"emit\", eventName, eventData);\n    enqueueProducers(this, eventName, eventData);\n    const listeners = getListeners(this, eventName);\n    const anyListeners = anyMap.get(this);\n    const staticListeners = [...listeners];\n    const staticAnyListeners = isListenerSymbol(eventName) ? [] : [...anyListeners];\n    await resolvedPromise;\n    await Promise.all([\n      ...staticListeners.map(async (listener) => {\n        if (listeners.has(listener)) {\n          return listener(eventData);\n        }\n      }),\n      ...staticAnyListeners.map(async (listener) => {\n        if (anyListeners.has(listener)) {\n          return listener(eventName, eventData);\n        }\n      })\n    ]);\n  }\n  async emitSerial(eventName, eventData) {\n    assertEventName(eventName);\n    this.logIfDebugEnabled(\"emitSerial\", eventName, eventData);\n    const listeners = getListeners(this, eventName);\n    const anyListeners = anyMap.get(this);\n    const staticListeners = [...listeners];\n    const staticAnyListeners = [...anyListeners];\n    await resolvedPromise;\n    for (const listener of staticListeners) {\n      if (listeners.has(listener)) {\n        await listener(eventData);\n      }\n    }\n    for (const listener of staticAnyListeners) {\n      if (anyListeners.has(listener)) {\n        await listener(eventName, eventData);\n      }\n    }\n  }\n  onAny(listener) {\n    assertListener(listener);\n    this.logIfDebugEnabled(\"subscribeAny\", void 0, void 0);\n    anyMap.get(this).add(listener);\n    this.emit(listenerAdded, { listener });\n    return this.offAny.bind(this, listener);\n  }\n  anyEvent() {\n    return iterator(this);\n  }\n  offAny(listener) {\n    assertListener(listener);\n    this.logIfDebugEnabled(\"unsubscribeAny\", void 0, void 0);\n    this.emit(listenerRemoved, { listener });\n    anyMap.get(this).delete(listener);\n  }\n  clearListeners(eventNames) {\n    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n    for (const eventName of eventNames) {\n      this.logIfDebugEnabled(\"clear\", eventName, void 0);\n      if (typeof eventName === \"string\" || typeof eventName === \"symbol\") {\n        getListeners(this, eventName).clear();\n        const producers = getEventProducers(this, eventName);\n        for (const producer of producers) {\n          producer.finish();\n        }\n        producers.clear();\n      } else {\n        anyMap.get(this).clear();\n        for (const listeners of eventsMap.get(this).values()) {\n          listeners.clear();\n        }\n        for (const producers of producersMap.get(this).values()) {\n          for (const producer of producers) {\n            producer.finish();\n          }\n          producers.clear();\n        }\n      }\n    }\n  }\n  listenerCount(eventNames) {\n    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n    let count = 0;\n    for (const eventName of eventNames) {\n      if (typeof eventName === \"string\") {\n        count += anyMap.get(this).size + getListeners(this, eventName).size + getEventProducers(this, eventName).size + getEventProducers(this).size;\n        continue;\n      }\n      if (typeof eventName !== \"undefined\") {\n        assertEventName(eventName);\n      }\n      count += anyMap.get(this).size;\n      for (const value of eventsMap.get(this).values()) {\n        count += value.size;\n      }\n      for (const value of producersMap.get(this).values()) {\n        count += value.size;\n      }\n    }\n    return count;\n  }\n  bindMethods(target, methodNames) {\n    if (typeof target !== \"object\" || target === null) {\n      throw new TypeError(\"`target` must be an object\");\n    }\n    methodNames = defaultMethodNamesOrAssert(methodNames);\n    for (const methodName of methodNames) {\n      if (target[methodName] !== void 0) {\n        throw new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n      }\n      Object.defineProperty(target, methodName, {\n        enumerable: false,\n        value: this[methodName].bind(this)\n      });\n    }\n  }\n}\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter((v) => v !== \"constructor\");\nObject.defineProperty(Emittery, \"listenerAdded\", {\n  value: listenerAdded,\n  writable: false,\n  enumerable: true,\n  configurable: false\n});\nObject.defineProperty(Emittery, \"listenerRemoved\", {\n  value: listenerRemoved,\n  writable: false,\n  enumerable: true,\n  configurable: false\n});\nvar emittery = Emittery;\nfunction fakeRoomStateChanged(page, maxPage, contextPath) {\n  return {\n    sceneState: {\n      sceneName: `${page}`,\n      scenePath: `${contextPath}/${page}`,\n      contextPath,\n      scenes: pageToScenes(maxPage),\n      index: page - 1\n    }\n  };\n}\nfunction pageToScenes(maxPage) {\n  const scenes = [];\n  for (let page = 1; page <= maxPage; ++page) {\n    scenes.push({ name: String(page) });\n  }\n  return scenes;\n}\nfunction prevPage(page) {\n  return Math.max(1, page - 1);\n}\nfunction nextPage(page, maxPage) {\n  return Math.min(maxPage, page + 1);\n}\nconst height = 350;\nvar IframeEvents;\n(function(IframeEvents2) {\n  IframeEvents2[\"Init\"] = \"Init\";\n  IframeEvents2[\"AttributesUpdate\"] = \"AttributesUpdate\";\n  IframeEvents2[\"SetAttributes\"] = \"SetAttributes\";\n  IframeEvents2[\"RegisterMagixEvent\"] = \"RegisterMagixEvent\";\n  IframeEvents2[\"RemoveMagixEvent\"] = \"RemoveMagixEvent\";\n  IframeEvents2[\"RemoveAllMagixEvent\"] = \"RemoveAllMagixEvent\";\n  IframeEvents2[\"RoomStateChanged\"] = \"RoomStateChanged\";\n  IframeEvents2[\"DispatchMagixEvent\"] = \"DispatchMagixEvent\";\n  IframeEvents2[\"ReceiveMagixEvent\"] = \"ReciveMagixEvent\";\n  IframeEvents2[\"NextPage\"] = \"NextPage\";\n  IframeEvents2[\"PrevPage\"] = \"PrevPage\";\n  IframeEvents2[\"SDKCreate\"] = \"SDKCreate\";\n  IframeEvents2[\"OnCreate\"] = \"OnCreate\";\n  IframeEvents2[\"SetPage\"] = \"SetPage\";\n  IframeEvents2[\"GetAttributes\"] = \"GetAttributes\";\n  IframeEvents2[\"Ready\"] = \"Ready\";\n  IframeEvents2[\"Destroy\"] = \"Destory\";\n  IframeEvents2[\"StartCreate\"] = \"StartCreate\";\n  IframeEvents2[\"WrapperDidUpdate\"] = \"WrapperDidUpdate\";\n  IframeEvents2[\"DisplayIframe\"] = \"DisplayIframe\";\n  IframeEvents2[\"HideIframe\"] = \"HideIframe\";\n  IframeEvents2[\"PageTo\"] = \"PageTo\";\n})(IframeEvents || (IframeEvents = {}));\nvar DomEvents;\n(function(DomEvents2) {\n  DomEvents2[\"WrapperDidMount\"] = \"WrapperDidMount\";\n  DomEvents2[\"IframeLoad\"] = \"IframeLoad\";\n})(DomEvents || (DomEvents = {}));\nconst ClickThroughAppliances = new Set([\"clicker\", \"selector\"]);\nconst IframeBridge = {\n  kind: \"IframeBridge\",\n  setup(context) {\n    const box = context.getBox();\n    const view = context.getView();\n    const displayer = context.getDisplayer();\n    const room = context.getRoom();\n    const attrs = ensureAttributes(context, {\n      src: \"about:blank\",\n      displaySceneDir: \"/h5\",\n      lastEvent: null,\n      state: {},\n      page: 0,\n      maxPage: 0\n    });\n    const sideEffectManager = new s();\n    const container = document.createElement(\"div\");\n    Object.assign(container.style, { width: \"100%\", height: \"100%\", position: \"relative\" });\n    const iframe = document.createElement(\"iframe\");\n    Object.assign(iframe.style, {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"none\",\n      display: \"block\"\n    });\n    container.appendChild(iframe);\n    box.mountContent(container);\n    let toggleClickThrough = () => {\n    };\n    const shouldClickThrough = (tool) => {\n      return ClickThroughAppliances.has(tool);\n    };\n    if (view) {\n      const viewBox = document.createElement(\"div\");\n      Object.assign(viewBox.style, {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0\n      });\n      container.appendChild(viewBox);\n      context.mountView(viewBox);\n      view.disableCameraTransform = true;\n      sideEffectManager.add(() => {\n        const onResize = () => {\n          const clientRect = container.getBoundingClientRect();\n          const scale = clientRect.height / height;\n          view.moveCamera({ scale, animationMode: \"immediately\" });\n        };\n        const observer = new ResizeObserver(onResize);\n        observer.observe(container);\n        return () => observer.disconnect();\n      });\n      toggleClickThrough = (enable) => {\n        viewBox.style.pointerEvents = enable ? \"none\" : \"auto\";\n      };\n      toggleClickThrough(shouldClickThrough(room == null ? void 0 : room.state.memberState.currentApplianceName));\n    }\n    const withReadonlyAttributes = (state) => __spreadProps(__spreadValues({}, state), {\n      url: attrs.src,\n      displaySceneDir: attrs.displaySceneDir,\n      width: iframe.scrollWidth,\n      height: iframe.scrollHeight,\n      useClicker: true,\n      lastEvent: attrs.lastEvent\n    });\n    const emitter = new emittery();\n    const magixEventMap = new Map();\n    const removeAllMagixEvent = () => {\n      magixEventMap.forEach((listener, event) => {\n        displayer.removeMagixEventListener(event, listener);\n      });\n      magixEventMap.clear();\n    };\n    const log = (...args) => false;\n    const postMessage = (message) => {\n      var _a;\n      log(\"[IframeBridge] postMessage %s %O\", message.kind, message.payload);\n      (_a = iframe.contentWindow) == null ? void 0 : _a.postMessage(JSON.parse(JSON.stringify(message)), \"*\");\n    };\n    const dispatchMagixEvent = (event, payload) => {\n      if (context.getIsWritable()) {\n        context.updateAttributes([\"lastEvent\"], { name: event, payload });\n        room == null ? void 0 : room.dispatchMagixEvent(event, payload);\n      }\n    };\n    const sendInitMessage = () => {\n      postMessage({\n        kind: IframeEvents.Init,\n        payload: {\n          attributes: withReadonlyAttributes(attrs.state),\n          roomState: displayer.state,\n          currentPage: attrs.page,\n          observerId: displayer.observerId\n        }\n      });\n    };\n    let hackCocos = attrs.src.includes(\"cocos\");\n    const onLoad = (ev) => {\n      sendInitMessage();\n      emitter.emit(DomEvents.IframeLoad, ev);\n      emitter.on(IframeEvents.Ready, () => {\n        var _a, _b;\n        if ((_a = attrs.lastEvent) == null ? void 0 : _a.payload) {\n          postMessage((_b = attrs.lastEvent) == null ? void 0 : _b.payload);\n        }\n      });\n      if (hackCocos) {\n        setTimeout(() => {\n          postMessage({\n            kind: IframeEvents.RoomStateChanged,\n            payload: fakeRoomStateChanged(1, attrs.maxPage, attrs.displaySceneDir)\n          });\n        }, 500);\n        hackCocos = false;\n      }\n      iframe.removeEventListener(\"load\", onLoad);\n    };\n    sideEffectManager.addEventListener(iframe, \"load\", onLoad);\n    let retryCount = 0;\n    const onError = () => {\n      if (retryCount++ < 3) {\n        iframe.src = attrs.src;\n      }\n    };\n    sideEffectManager.addEventListener(iframe, \"error\", onError);\n    iframe.src = attrs.src;\n    sideEffectManager.add(() => context.mobxUtils.autorun(() => {\n      postMessage({\n        kind: IframeEvents.AttributesUpdate,\n        payload: withReadonlyAttributes(attrs.state)\n      });\n    }));\n    sideEffectManager.add(() => context.mobxUtils.autorun(() => {\n      iframe.src = attrs.src;\n    }));\n    sideEffectManager.add(() => context.mobxUtils.autorun(() => {\n      postMessage({\n        kind: IframeEvents.RoomStateChanged,\n        payload: fakeRoomStateChanged(attrs.page, attrs.maxPage, attrs.displaySceneDir)\n      });\n    }));\n    const bridge = {\n      emitter,\n      postMessage,\n      context\n    };\n    emitter.emit(IframeEvents.StartCreate);\n    emitter.emit(IframeEvents.OnCreate, bridge);\n    if (room) {\n      sideEffectManager.add(() => {\n        const onRoomStateChanged = (e) => {\n          if (e.memberState) {\n            toggleClickThrough(shouldClickThrough(e.memberState.currentApplianceName));\n          }\n        };\n        room.callbacks.on(\"onRoomStateChanged\", onRoomStateChanged);\n        return () => room.callbacks.off(\"onRoomStateChanged\", onRoomStateChanged);\n      });\n    }\n    sideEffectManager.addEventListener(window, \"message\", (ev) => {\n      if (ev.source !== iframe.contentWindow) {\n        return;\n      }\n      const data = ev.data;\n      log(\"[IframeBridge] received\", data.kind, data.payload);\n      switch (data.kind) {\n        case IframeEvents.SetAttributes: {\n          context.updateAttributes([\"state\"], __spreadValues(__spreadValues({}, attrs.state), data.payload));\n          break;\n        }\n        case IframeEvents.RegisterMagixEvent: {\n          const listener = (ev2) => {\n            if (ev2.authorId === displayer.observerId) {\n              return;\n            }\n            postMessage({ kind: IframeEvents.ReceiveMagixEvent, payload: ev2 });\n          };\n          const eventName = data.payload;\n          magixEventMap.set(eventName, listener);\n          displayer.addMagixEventListener(eventName, listener);\n          break;\n        }\n        case IframeEvents.RemoveMagixEvent: {\n          const eventName = data.payload;\n          const listener = magixEventMap.get(eventName);\n          displayer.removeMagixEventListener(eventName, listener);\n          break;\n        }\n        case IframeEvents.DispatchMagixEvent: {\n          const ev2 = data.payload;\n          dispatchMagixEvent(ev2.event, ev2.payload);\n          break;\n        }\n        case IframeEvents.RemoveAllMagixEvent: {\n          removeAllMagixEvent();\n          break;\n        }\n        case IframeEvents.NextPage: {\n          if (context.getIsWritable() && room) {\n            const page = nextPage(attrs.page, attrs.maxPage);\n            if (page === attrs.page)\n              break;\n            context.setScenePath([attrs.displaySceneDir, page].join(\"/\"));\n            context.updateAttributes([\"page\"], page);\n            dispatchMagixEvent(IframeEvents.NextPage, {});\n          }\n          break;\n        }\n        case IframeEvents.PrevPage: {\n          if (context.getIsWritable() && room) {\n            const page = prevPage(attrs.page);\n            if (page === attrs.page)\n              break;\n            context.setScenePath([attrs.displaySceneDir, page].join(\"/\"));\n            context.updateAttributes([\"page\"], page);\n            dispatchMagixEvent(IframeEvents.PrevPage, {});\n          }\n          break;\n        }\n        case IframeEvents.SetPage: {\n          const maxPage = Number(data.payload) || 0;\n          if (context.getIsWritable() && room) {\n            if (!maxPage) {\n              room.removeScenes(attrs.displaySceneDir);\n            } else {\n              const scenes = room.entireScenes()[attrs.displaySceneDir];\n              if (!scenes || scenes.length !== maxPage) {\n                room.removeScenes(attrs.displaySceneDir);\n                room.putScenes(attrs.displaySceneDir, pageToScenes(maxPage));\n              }\n              context.setScenePath(`${attrs.displaySceneDir}/1`);\n              context.updateAttributes([\"maxPage\"], maxPage);\n            }\n          }\n          break;\n        }\n        case IframeEvents.PageTo: {\n          const page = data.payload;\n          if (context.getIsWritable() && room) {\n            if (!Number.isSafeInteger(page) || page <= 0)\n              break;\n            context.setScenePath(`${attrs.displaySceneDir}/${page}`);\n            context.updateAttributes([\"page\"], page);\n            dispatchMagixEvent(IframeEvents.PageTo, page - 1);\n          }\n          break;\n        }\n        case IframeEvents.SDKCreate: {\n          sendInitMessage();\n          break;\n        }\n        case IframeEvents.GetAttributes: {\n          postMessage({\n            kind: IframeEvents.GetAttributes,\n            payload: withReadonlyAttributes(attrs.state)\n          });\n          break;\n        }\n        default: {\n          console.warn(`[IframeBridge]: unknown event kind \"${data.kind}\"`);\n        }\n      }\n    });\n    context.emitter.on(\"destroy\", () => {\n      console.log(\"[IframeBridge]: destroy\");\n      emitter.emit(IframeEvents.Destroy);\n      sideEffectManager.flushAll();\n      removeAllMagixEvent();\n      iframe.remove();\n    });\n    return bridge;\n  }\n};\nexport { IframeBridge as default };\n//# sourceMappingURL=main.es.js.map\n"],"names":["__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","key","value","__spreadValues","a","b","prop","__spreadProps","s","s2","e","t","r","i","t2","isObject","val","ensureAttributes","context","initAttrs","attrs","anyMap","eventsMap","producersMap","anyProducer","resolvedPromise","listenerAdded","listenerRemoved","isGlobalDebugEnabled","assertEventName","eventName","assertListener","listener","getListeners","instance","events","getEventProducers","producers","enqueueProducers","eventData","producer","item","iterator","eventNames","isFinished","flush","queue","resolve","defaultMethodNamesOrAssert","methodNames","allEmitteryMethods","methodName","isListenerSymbol","symbol","Emittery","emitteryPropertyName","target","getEmitteryProperty","emitteryMethodCaller","args","env","newValue","options","type","debugName","currentTime","logTime","off","data","listeners","anyListeners","staticListeners","staticAnyListeners","count","v","emittery","fakeRoomStateChanged","page","maxPage","contextPath","pageToScenes","scenes","prevPage","nextPage","height","IframeEvents","IframeEvents2","DomEvents","DomEvents2","ClickThroughAppliances","IframeBridge","box","view","displayer","room","sideEffectManager","container","iframe","toggleClickThrough","shouldClickThrough","tool","viewBox","onResize","scale","observer","enable","withReadonlyAttributes","state","emitter","magixEventMap","removeAllMagixEvent","event","log","postMessage","message","_a","dispatchMagixEvent","payload","sendInitMessage","hackCocos","onLoad","ev","_b","retryCount","onError","bridge","onRoomStateChanged","ev2"],"mappings":"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"}